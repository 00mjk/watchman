(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{165:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var o=n(1),r=n(9),i=(n(0),n(209)),a={id:"cookies",title:"Query Synchronization"},c={id:"cookies",title:"Query Synchronization",description:"A file system monitor needs to make sure that queries see up-to-date views.",source:"@site/docs/cookies.md",permalink:"/watchman/docs/cookies",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/cookies.md",sidebar:"sidebar",previous:{title:"Contributing",permalink:"/watchman/docs/contributing"},next:{title:"Troubleshooting",permalink:"/watchman/docs/troubleshooting"}},s=[{value:"Background",id:"background",children:[]},{value:"How cookies work",id:"how-cookies-work",children:[]},{value:"Credits",id:"credits",children:[]}],l={rightToc:s};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A file system monitor needs to make sure that queries see up-to-date views.\nWatchman ensures that by creating a unique ",Object(i.b)("em",{parentName:"p"},"cookie")," for each query made to it."),Object(i.b)("h2",{id:"background"},"Background"),Object(i.b)("p",null,"Consider a directory tree traversal to gather file status, such as the one\nperformed by ",Object(i.b)("inlineCode",{parentName:"p"},"hg status")," or ",Object(i.b)("inlineCode",{parentName:"p"},"git status"),". The traversal will race with any\noperations happening concurrently, and this is impossible to fix. However, we\ndo get some weaker guarantees:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Every file operation that happens before the traversal is started will be\nobserved."),Object(i.b)("li",{parentName:"ol"},"File operations that happen after the traversal is started may or may not\nbe observed.")),Object(i.b)("p",null,"For watchman, cookies enable us to provide similar guarantees. For a given\nwatchman query:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Every file operation that happens before the query is started will be\nobserved."),Object(i.b)("li",{parentName:"ol"},"File operations that happen after the query is started may or may not be\nobserved.")),Object(i.b)("h2",{id:"how-cookies-work"},"How cookies work"),Object(i.b)("p",null,"A ",Object(i.b)("em",{parentName:"p"},"cookie")," is a temporary file that is created inside a directory observed by\nwatchman. The cookie is created in a directory that is expected not to go\naway. The obvious location is the root itself, but we'd like cookies not to\nshow up in VCS operations. So if a VCS directory (",Object(i.b)("inlineCode",{parentName:"p"},".git"),", ",Object(i.b)("inlineCode",{parentName:"p"},".hg")," or ",Object(i.b)("inlineCode",{parentName:"p"},".svn"),") is\nfound, that's where cookies are created instead."),Object(i.b)("p",null,"The cookie is created while the root is locked, so watchman won't find the\ncookie by accident while processing events from a prior run."),Object(i.b)("p",null,"Once the cookie is created, the calling thread waits on a condition variable\nguarded by the root's lock. This causes the lock to be released, and the\nroot's notify thread can now read events as usual."),Object(i.b)("p",null,"When the notify thread finds that it is processing a cookie, it will signal\nits respective condition variable. Importantly, this does not wake the calling\nthread up immediately: since the notify thread still holds the root lock, the\ncalling thread will only be able to proceed once the notify thread releases\nthe lock."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"What do cookies get us?")),Object(i.b)("p",null,"File monitoring systems like ",Object(i.b)("inlineCode",{parentName:"p"},"inotify")," typically provide an ordering\nguarantee: notifications arrive in the order they happen. Any events happening\nbefore the cookie is created will appear before the event for the cookie does,\nwhich means they will be processed by the time the query is answered."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"How well do cookies work?")),Object(i.b)("p",null,"The Mercurial test suite has proved to be a good stress test for watchman.\nBefore cookies were implemented, if 16 or more tests from the suite were run\nin parallel, watchman would start falling behind and often produce outdated\nanswers. Cookies have successfully eradicated that."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Can watchman find a cookie even if not all events leading to its appearance\nhave been processed?")),Object(i.b)("p",null,"Consider this situation when cookies are created inside ",Object(i.b)("inlineCode",{parentName:"p"},".hg"),":"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Event A happens that would cause ",Object(i.b)("inlineCode",{parentName:"li"},".hg")," to be read recursively"),Object(i.b)("li",{parentName:"ol"},"Event B happens that touches a file ",Object(i.b)("inlineCode",{parentName:"li"},"subdir/foo")),Object(i.b)("li",{parentName:"ol"},"A cookie is created inside ",Object(i.b)("inlineCode",{parentName:"li"},".hg"),", causing event C"),Object(i.b)("li",{parentName:"ol"},"Event A is read from the OS file notification system but not events B and C"),Object(i.b)("li",{parentName:"ol"},"The cookie is found but ",Object(i.b)("inlineCode",{parentName:"li"},"subdir/foo")," is never read.")),Object(i.b)("p",null,"On Linux, to prevent this from happening, watchman will only consider a cookie\nto be found if it is directly returned via OS notifications. The only\nexception to this is during the initial crawl or a recrawl, when the cookie\ndirectory isn't being watched yet."),Object(i.b)("p",null,"On other platforms, this becomes more complicated because the respective\nmonitoring system only tells us that something inside a directory was created,\nnot what was created. This is currently an unresolved issue."),Object(i.b)("h2",{id:"credits"},"Credits"),Object(i.b)("p",null,"The idea was originally proposed by Matt Mackall ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"mailto:mpm@selenic.com"}),"mpm@selenic.com"),"."))}b.isMDXComponent=!0},209:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(o.forwardRef)((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(n),u=o,h=p["".concat(a,".").concat(u)]||p[u]||d[u]||i;return n?r.a.createElement(h,c({ref:t},l,{components:n})):r.a.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);