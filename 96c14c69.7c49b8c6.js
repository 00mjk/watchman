(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{131:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(1),r=n(6),c=(n(0),n(170)),i={id:"match",title:"match & imatch"},o={id:"match",title:"match & imatch",description:"The `match` expression performs a glob-style match against the basename of the",source:"@site/docs/match.md",permalink:"/watchman/docs/match",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/match.md",sidebar:"sidebar",previous:{title:"exists",permalink:"/watchman/docs/exists"},next:{title:"name & iname",permalink:"/watchman/docs/name"}},l=[{value:"Case sensitivity",id:"case-sensitivity",children:[]},{value:"wildmatch",id:"wildmatch",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"match")," expression performs a glob-style match against the basename of the\nfile, evaluating true if the match is successful."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'["match", "*.txt"]\n')),Object(c.b)("p",null,"You may optionally provide a third argument to change the scope of the match\nfrom the basename to the wholename of the file."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'["match", "*.txt", "basename"][("match", "dir/*.txt", "wholename")]\n')),Object(c.b)("h3",{id:"case-sensitivity"},"Case sensitivity"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"match")," is case sensitive; for case insensitive matching use ",Object(c.b)("inlineCode",{parentName:"p"},"imatch")," instead;\nit behaves identically to ",Object(c.b)("inlineCode",{parentName:"p"},"match")," except that the match is performed ignoring\ncase."),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Since 2.9.9.")),Object(c.b)("p",null,"On systems where the watched root is a case insensitive filesystem (this is\nthe common case for macOS and Windows), ",Object(c.b)("inlineCode",{parentName:"p"},"match")," is equivalent to ",Object(c.b)("inlineCode",{parentName:"p"},"imatch"),"."),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Since 4.7.")),Object(c.b)("p",null,"You can override the case sensitivity of all name matching operations used in\nthe query by setting the ",Object(c.b)("inlineCode",{parentName:"p"},"case_sensitive")," field in your query."),Object(c.b)("h2",{id:"wildmatch"},"wildmatch"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Since 3.7.")),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"match")," expression has been enhanced as described below. The\n",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"capabilities"}),"capability")," name associated with this enhanced functionality is\n",Object(c.b)("inlineCode",{parentName:"p"},"wildmatch"),"."),Object(c.b)("p",null,"If you want to recursively match all files under a directory, use the ",Object(c.b)("inlineCode",{parentName:"p"},"**"),"\nglob operator along with the ",Object(c.b)("inlineCode",{parentName:"p"},"wholename")," scope:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'["match", "src/**/*.java", "wholename"]\n')),Object(c.b)("p",null,"By default, paths whose names start with ",Object(c.b)("inlineCode",{parentName:"p"},".")," are not included. To change this\nbehavior, you may optionally provide a fourth argument containing a dictionary\nof flags:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'["match", "*.txt", "basename", {"includedotfiles": true}]\n')),Object(c.b)("p",null,"By default, backslashes in the pattern escape the next character, so ",Object(c.b)("inlineCode",{parentName:"p"},"\\*"),"\nmatches a literal ",Object(c.b)("inlineCode",{parentName:"p"},"*")," character. To change this behavior so backslashes are\ntreated literally, set the ",Object(c.b)("inlineCode",{parentName:"p"},"noescape")," flag to ",Object(c.b)("inlineCode",{parentName:"p"},"true")," in the flags dictionary.\n(Note that ",Object(c.b)("inlineCode",{parentName:"p"},"\\\\")," is a literal ",Object(c.b)("inlineCode",{parentName:"p"},"\\")," in JSON notation):"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'["match", "*\\\\*.txt", "filename", {"noescape": true}]\n')),Object(c.b)("p",null,"matches ",Object(c.b)("inlineCode",{parentName:"p"},"a\\b.txt"),"."))}b.isMDXComponent=!0},170:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),h=a,u=p["".concat(i,".").concat(h)]||p[h]||m[h]||c;return n?r.a.createElement(u,o({ref:t},s,{components:n})):r.a.createElement(u,o({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<c;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);