(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{149:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var a=n(1),i=(n(0),n(209));const r={id:"subscribe",title:"subscribe"},o={id:"subscribe",title:"subscribe",description:"_Since 1.6_",source:"@site/docs/subscribe.md",permalink:"/watchman/docs/subscribe",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/subscribe.md",sidebar:"sidebar",previous:{title:"state-leave",permalink:"/watchman/docs/state-leave"},next:{title:"trigger",permalink:"/watchman/docs/trigger"}},s=[{value:"Filesystem Settling",id:"filesystem-settling",children:[]},{value:"Advanced Settling",id:"advanced-settling",children:[{value:"defer",id:"defer",children:[]},{value:"drop",id:"drop",children:[]}]},{value:"Source Control Aware Subscriptions",id:"source-control-aware-subscriptions",children:[]}],c={rightToc:s};function l({components:e,...t}){return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Since 1.6")),Object(i.b)("p",null,"Subscribes to changes against a specified root and requests that they be sent\nto the client via its connection. The updates will continue to be sent while\nthe connection is open. If the connection is closed, the subscription is\nimplicitly removed."),Object(i.b)("p",null,"This makes the most sense in an application connecting via the socket\ninterface, but you may also subscribe via the command line tool if you're\ninterested in observing the changes for yourself:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ watchman -j --server-encoding=json -p <<-EOT\n["subscribe", "/path/to/root", "mysubscriptionname", {\n  "expression": ["allof",\n    ["type", "f"],\n    ["not", "empty"],\n    ["suffix", "php"]\n  ],\n  "fields": ["name"]\n}]\nEOT\n')),Object(i.b)("p",null,"The example above registers a subscription against the specified root with the\nname ",Object(i.b)("inlineCode",{parentName:"p"},"mysubscriptionname"),"."),Object(i.b)("p",null,"The response to a subscribe command looks like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "version": "1.6",\n  "subscribe": "mysubscriptionname"\n}\n')),Object(i.b)("p",null,"When the subscription is first established, the expression term is evaluated\nand if any files match, a subscription notification packet is generated and\nsent, unilaterally to the client."),Object(i.b)("p",null,"Then, each time a change is observed, and after the settle period has passed,\nthe expression is evaluated again. If any files are matched, the server will\nunilaterally send the query results to the client with a packet that looks\nlike this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "version": "1.6",\n  "clock": "c:1234:123",\n  "files": ["one.php"],\n  "root": "/path/being/watched",\n  "subscription": "mysubscriptionname"\n}\n')),Object(i.b)("p",null,"The subscribe command object allows the client to specify a since parameter;\nif present in the command, the initial set of subscription results will only\ninclude files that changed since the specified clockspec, equivalent to using\nthe ",Object(i.b)("inlineCode",{parentName:"p"},"query")," command with the ",Object(i.b)("inlineCode",{parentName:"p"},"since")," generator."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'[\n  "subscribe",\n  "/path/to/root",\n  "myname",\n  {\n    "since": "c:1234:123",\n    "expression": ["not", "empty"],\n    "fields": ["name"]\n  }\n]\n')),Object(i.b)("p",null,'The suggested mode of operation is for the client process to maintain its own\nlocal copy of the last "clock" value and use that to establish the\nsubscription when it first connects.'),Object(i.b)("h2",{id:"filesystem-settling"},"Filesystem Settling"),Object(i.b)("p",null,"Prior to watchman version 3.2, the settling behavior was to hold subscription\nnotifications until the kernel notification stream was complete."),Object(i.b)("p",null,"Starting in watchman version 3.2, after the notification stream is complete,\nif the root appears to be a version control directory, subscription\nnotifications will be held until an outstanding version control operation is\ncomplete (at the time of writing, this is based on the presence of either\n",Object(i.b)("inlineCode",{parentName:"p"},".hg/wlock")," or ",Object(i.b)("inlineCode",{parentName:"p"},".git/index.lock"),"). This behavior matches triggers and helps to\navoid performing transient work in response to files changing, for example,\nduring a rebase operation."),Object(i.b)("p",null,"In some circumstances it is desirable for a client to observe the creation of\nthe control files at the start of a version control operation. You may specify\nthat you want this behavior by passing the ",Object(i.b)("inlineCode",{parentName:"p"},"defer_vcs")," flag to your\nsubscription command invocation:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ watchman -j -p <<-EOT\n["subscribe", "/path/to/root", "mysubscriptionname", {\n  "expression": ["allof",\n    ["type", "f"],\n    ["not", "empty"],\n    ["suffix", "php"]\n  ],\n  "defer_vcs": false,\n  "fields": ["name"]\n}]\nEOT\n')),Object(i.b)("h2",{id:"advanced-settling"},"Advanced Settling"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Since 4.4")),Object(i.b)("p",null,"In more complex integrations it is desirable to be able to have a watchman\naware application signal the beginning and end of some work that will generate\na lot of change notifications. For example, Mercurial or Git could communicate\nwith watchman before and after updating the working copy."),Object(i.b)("p",null,"Some applications will want to know that the update is in progress and\ncontinue to process notifications. Others may want to defer processing the\nnotifications until the update completes, and some may wish to drop any\nnotifications produced while the update was in progress."),Object(i.b)("p",null,"Watchman subscriptions provide the mechanism for each of these use cases and\nexpose it via two new fields in the subscription object; ",Object(i.b)("inlineCode",{parentName:"p"},"defer")," and ",Object(i.b)("inlineCode",{parentName:"p"},"drop"),"\nare described below."),Object(i.b)("p",null,"It can be difficult to mix ",Object(i.b)("inlineCode",{parentName:"p"},"defer")," and ",Object(i.b)("inlineCode",{parentName:"p"},"drop")," with multiple overlapping states\nin the context of a given subscription stream as there is a single cursor to\ntrack the subscription position."),Object(i.b)("p",null,"If your application uses multiple overlapping states and wants to ",Object(i.b)("inlineCode",{parentName:"p"},"defer")," some\nresults and ",Object(i.b)("inlineCode",{parentName:"p"},"drop")," others, it is recommended that you use ",Object(i.b)("inlineCode",{parentName:"p"},"drop")," for all of\nthe states and then issues queries with ",Object(i.b)("inlineCode",{parentName:"p"},"since")," terms bounded by the ",Object(i.b)("inlineCode",{parentName:"p"},"clock"),"\nfields from the subscription state PDUs to ensure that it observes all of the\nresults of interest."),Object(i.b)("h3",{id:"defer"},"defer"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'[\n  "subscribe",\n  "/path/to/root",\n  "mysubscriptionname",\n  {\n    "defer": ["mystatename"],\n    "fields": ["name"]\n  }\n]\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"defer")," field specifies a list of state names for which the subscriber\nwishes to defer the notification stream. When a watchman client signals that a\nstate has been entered via the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"state-enter"}),"state-enter")," command, if the\nstate name matches any in the ",Object(i.b)("inlineCode",{parentName:"p"},"defer")," list then the subscription will emit a\nunilateral subscription PDU like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "subscription":  "mysubscriptionname",\n  "root":          "/path/to/root",\n  "state-enter":   "mystatename",\n  "clock":         "<clock>",\n  "metadata":      <metadata from the state-enter command>\n}\n')),Object(i.b)("p",null,"Watchman will then defer sending any subscription PDUs with ",Object(i.b)("inlineCode",{parentName:"p"},"files")," payloads\nuntil the state is vacated either by a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"state-leave"}),"state-leave")," command or\nby the client that entered the state disconnecting from the watchman service."),Object(i.b)("p",null,"Once the state is vacated, watchman will emit a unilateral subscription PDU\nlike this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "subscription":  "mysubscriptionname",\n  "root":          "/path/to/root",\n  "state-leave":   "mystatename",\n  "clock":         "<clock>",\n  "metadata":      <metadata from the exit-state command>\n}\n')),Object(i.b)("p",null,"The subscription stream will then be re-enabled and notifications received\nsince the corresponding ",Object(i.b)("inlineCode",{parentName:"p"},"state-enter")," will be delivered to clients."),Object(i.b)("h3",{id:"drop"},"drop"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'[\n  "subscribe",\n  "/path/to/root",\n  "mysubscriptionname",\n  {\n    "drop": ["mystatename"],\n    "fields": ["name"]\n  }\n]\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"drop")," field specifies a list of state names for which the subscriber\nwishes to discard the notification stream. It works very much like ",Object(i.b)("inlineCode",{parentName:"p"},"defer")," as\ndescribed above, but when a state is vacated, the pending notification stream\nis fast-forwarded to the clock of the ",Object(i.b)("inlineCode",{parentName:"p"},"state-leave")," command, effectively\nsuppressing any notifications that were generated between the ",Object(i.b)("inlineCode",{parentName:"p"},"state-enter"),"\nand the ",Object(i.b)("inlineCode",{parentName:"p"},"state-leave")," commands."),Object(i.b)("h2",{id:"source-control-aware-subscriptions"},"Source Control Aware Subscriptions"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Since 4.9")),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/watchman/docs/scm-query"}),"Read more about these here")))}l.isMDXComponent=!0},209:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),b=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},p=function(e){var t=b(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(n),m=a,u=p["".concat(o,".").concat(m)]||p[m]||d[m]||r;return n?i.a.createElement(u,s({ref:t},l,{components:n})):i.a.createElement(u,s({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);