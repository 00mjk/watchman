(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{173:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(1),i=(n(0),n(209));const r={id:"watchman-wait",title:"watchman-wait"},l={id:"watchman-wait",title:"watchman-wait",description:"`watchman-wait` waits for changes to files. It uses the watchman service to",source:"@site/docs/watchman-wait.md",permalink:"/watchman/docs/watchman-wait",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/watchman-wait.md",sidebar:"sidebar",previous:{title:"watchman-make",permalink:"/watchman/docs/watchman-make"},next:{title:"watchman-replicate-subscription",permalink:"/watchman/docs/watchman-replicate-subscription"}},o=[{value:"Paths and Patterns",id:"paths-and-patterns",children:[]},{value:"Controlling lifetime",id:"controlling-lifetime",children:[]},{value:"Controlling output",id:"controlling-output",children:[]},{value:"Exit Status",id:"exit-status",children:[]}],c={rightToc:o};function s({components:e,...t}){return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," waits for changes to files. It uses the watchman service to\nefficiently and recursively watch your specified list of paths."),Object(i.b)("p",null,"It is suitable for waiting for changes to files from shell scripts. It has\nsome similarity to ",Object(i.b)("inlineCode",{parentName:"p"},"inotifywait")," except that it uses the watchman service to\nwatch files and thus can be used on any of the operating systems supported by\nwatchman, not just Linux."),Object(i.b)("p",null,"It can stop after a configurable number of events are observed. The default is\na single event. You may also remove the limit and allow it to execute\ncontinuously."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," will print one event per line. The event information includes\nyour specified list of fields, with each field separated by a space (or your\nchoice of ",Object(i.b)("inlineCode",{parentName:"p"},"--separator"),")."),Object(i.b)("p",null,"Events are consolidated and settled by the watchman server before they are\ndispatched to ",Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," so that your script won't start executing until\nafter the files have stopped changing."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," requires ",Object(i.b)("inlineCode",{parentName:"p"},"pywatchman")," (and thus requires ",Object(i.b)("inlineCode",{parentName:"p"},"python"),") as well as\n",Object(i.b)("inlineCode",{parentName:"p"},"watchman"),"."),Object(i.b)("h3",{id:"paths-and-patterns"},"Paths and Patterns"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ watchman-wait path [path ...]\n")),Object(i.b)("p",null,"The primary unit of watching is a path. You must specify a list of one or more\npaths that you'd like to wait for. Paths can be files or directories. Each of\nthe paths in your list must exist at the time that you invoke ",Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait"),"\nor an error will be reported and ",Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," will exit."),Object(i.b)("p",null,"If you'd like to wait for a file to be created you can watch the directory in\nwhich it will be created. You may further refine your watch by limiting it to\na set of patterns."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ watchman-wait . -p '*.so'\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ watchman-wait -p '*.so' -- .\n")),Object(i.b)("p",null,"Both of the above will wait for a shared object file to be changed in any path\nunder the current working directory. Since both the ",Object(i.b)("inlineCode",{parentName:"p"},"-p")," option and the list\nof paths accept one or more parameters, the second form shows how to\ndisambiguate between the list of patterns and the list of paths using the ",Object(i.b)("inlineCode",{parentName:"p"},"--"),"\nseparator."),Object(i.b)("p",null,"Patterns are wildmatch style globs that support recursive matching via the\n",Object(i.b)("inlineCode",{parentName:"p"},"**")," placeholder."),Object(i.b)("p",null,"You should always quote your pattern parameters so that they are not evaluated\nby your shell."),Object(i.b)("h3",{id:"controlling-lifetime"},"Controlling lifetime"),Object(i.b)("p",null,"There are two primary controls for how long ",Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," will run:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"-t")," or ",Object(i.b)("inlineCode",{parentName:"li"},"--timeout")," places a time limit on execution"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"-m")," or ",Object(i.b)("inlineCode",{parentName:"li"},"--max-events")," places a limit on the number of events to process")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," will terminate when either the timeout is hit or the max\nevents limit is hit."),Object(i.b)("p",null,"By default there is no time limit, but there is a default limit of a single\nevent."),Object(i.b)("p",null,"You may specify ",Object(i.b)("inlineCode",{parentName:"p"},"--max-events 0")," to disable the event limit."),Object(i.b)("h3",{id:"controlling-output"},"Controlling output"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," will output one line per event. The following options\ninfluence the output:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--fields NAME,NAME")," - specifies the list of fields to be printed for each\nevent. The default is ",Object(i.b)("inlineCode",{parentName:"li"},"--fields name")," which will print just the ",Object(i.b)("inlineCode",{parentName:"li"},"name")," of\nthe file that was changed. You may use any of the available fields listed in\n",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"query#available-fields"}),"available fields"),". The fields will be printed in\nthe order you list them."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--relative DIR")," - the ",Object(i.b)("inlineCode",{parentName:"li"},"name")," field will be adjusted to be relative to ",Object(i.b)("inlineCode",{parentName:"li"},"DIR"),"\nbefore it is printed out. The default for ",Object(i.b)("inlineCode",{parentName:"li"},"DIR")," is the current working\ndirectory when ",Object(i.b)("inlineCode",{parentName:"li"},"watchman-wait")," is started."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"--separator STRING")," - if you specified multiple fields, the separator\nstring will be used when printing them. The default is ",Object(i.b)("inlineCode",{parentName:"li"},'--separator " "'),"\nwhich will print the fields with spaces between them.")),Object(i.b)("h3",{id:"exit-status"},"Exit Status"),Object(i.b)("p",null,"The following exit status codes can be used to determine what caused\n",Object(i.b)("inlineCode",{parentName:"p"},"watchman-wait")," to exit:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"0")," is returned after successfully waiting for event(s)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"1")," in case of a runtime error of some kind"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"2")," the ",Object(i.b)("inlineCode",{parentName:"li"},"-t"),"/",Object(i.b)("inlineCode",{parentName:"li"},"--timeout")," option was used and that amount of time passed\nbefore an event was received"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"3")," if execution was interrupted (Ctrl-C)")))}s.isMDXComponent=!0},209:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},p=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||r;return n?i.a.createElement(h,o({ref:t},s,{components:n})):i.a.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);