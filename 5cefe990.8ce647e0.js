(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{155:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(1),c=n(9),a=(n(0),n(204)),o={id:"clockspec",title:"Clockspec"},i={id:"clockspec",title:"Clockspec",description:"For commands that query based on time, watchman offers a couple of different",source:"@site/docs/clockspec.md",permalink:"/watchman/docs/clockspec",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/clockspec.md",sidebar:"sidebar",previous:{title:"watch-project",permalink:"/watchman/docs/watch-project"},next:{title:"File Queries",permalink:"/watchman/docs/file-query"}},s=[],l={rightToc:s};function u(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"For commands that query based on time, watchman offers a couple of different\nways to measure time."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"number of seconds since the unix epoch (unix ",Object(a.b)("inlineCode",{parentName:"li"},"time_t")," style)"),Object(a.b)("li",{parentName:"ul"},"a clock id of the form ",Object(a.b)("inlineCode",{parentName:"li"},"c:123:234")),Object(a.b)("li",{parentName:"ul"},"a named cursor of the form ",Object(a.b)("inlineCode",{parentName:"li"},"n:whatever")," (but clock ids are faster!)")),Object(a.b)("p",null,"The first and most obvious is passing a unix timestamp. Watchman records the\nobserved time that files change and allows you to find files that have changed\nsince that time. Using a timestamp is prone to race conditions in\nunderstanding the complete state of the file tree."),Object(a.b)("p",null,"Using an abstract clock id insulates the client from these race conditions by\nticking as changes are detected rather than as time moves. Watchman returns\nthe current clock id when it delivers match results; you can use that value as\nthe clockspec in your next time relative query to get a race free assessment\nof changed files."),Object(a.b)("p",null,'As a convenience, watchman can maintain the last observed clock for a client\nby associating it with a client defined cursor name. For example, you could\nenumerate all the "C" source files on your first invocation of:'),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"watchman since /path/to/src n:c_srcs '*.c'\n")),Object(a.b)("p",null,'and when you run it a second time, it will show you only the "C" source files\nthat changed since the last time that someone queried using "n:c_srcs" as the\nclock spec. However, it\'s not possible to "roll back" a named cursor, so\nadvanced users desiring such functionality should use clock ids instead.'),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Since 4.7.")),Object(a.b)("p",null,"We recommend not using the ",Object(a.b)("inlineCode",{parentName:"p"},"n:whatever")," form as it requires an exclusive lock\non the view to execute; this can increase contention and result in slower\nqueries."))}u.isMDXComponent=!0},204:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var r=n(0),c=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=c.a.createContext({}),u=function(e){var t=c.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},p=function(e){var t=u(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,b=p["".concat(o,".").concat(d)]||p[d]||m[d]||a;return n?c.a.createElement(b,i({ref:t},l,{components:n})):c.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);