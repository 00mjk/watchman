(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{147:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(1),i=n(9),s=(n(0),n(204)),a={id:"flush-subscriptions",title:"flush-subscriptions"},o={id:"flush-subscriptions",title:"flush-subscriptions",description:"*Since 4.8.*",source:"@site/docs/flush-subscriptions.md",permalink:"/watchman/docs/flush-subscriptions",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/flush-subscriptions.md",sidebar:"sidebar",previous:{title:"find",permalink:"/watchman/docs/find"},next:{title:"get-config",permalink:"/watchman/docs/get-config"}},c=[{value:"Arguments",id:"arguments",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Deferred and Dropped Updates",id:"deferred-and-dropped-updates",children:[]},{value:"Notes",id:"notes",children:[]}],p={rightToc:c};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Since 4.8.")),Object(s.b)("p",null,"Flushes buffered updates to subscriptions associated with the current\nsession, guaranteeing that they are up-to-date as of the time Watchman\nreceived the ",Object(s.b)("inlineCode",{parentName:"p"},"flush-subscriptions")," command."),Object(s.b)("p",null,"Subscription updates will be interleaved between the ",Object(s.b)("inlineCode",{parentName:"p"},"flush-subscriptions"),"\nrequest and its response. Once the response has been received, subscriptions are\nup-to-date."),Object(s.b)("p",null,"This command is designed to be used by interactive programs that have a\nbackground process or daemon maintaining a subscription to Watchman. The typical\npattern is for interactive commands to be forwarded to the process, which calls\n",Object(s.b)("inlineCode",{parentName:"p"},"flush-subscriptions")," and then processes any subscription updates it received.\nThis pattern eliminates races with files changed right before the interactive\ncommand."),Object(s.b)("h3",{id:"arguments"},"Arguments"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"sync_timeout"),": Required. The number of milliseconds to wait to observe a\nsynchronization cookie. The synchronization cookie is created at the start of\nthe ",Object(s.b)("inlineCode",{parentName:"li"},"flush-subscriptions")," call, and once the cookie is observed, means that\nthe OS has sent watchman all the updates till at least the start of the\n",Object(s.b)("inlineCode",{parentName:"li"},"flush-subscriptions")," call."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"subscriptions"),": Optional. Which subscriptions to flush. By default this\nflushes all subscriptions associated with this project on this session.")),Object(s.b)("h3",{id:"examples"},"Examples"),Object(s.b)("p",null,"Assuming subscriptions ",Object(s.b)("inlineCode",{parentName:"p"},"sub1"),", ",Object(s.b)("inlineCode",{parentName:"p"},"sub2")," and ",Object(s.b)("inlineCode",{parentName:"p"},"sub3")," have been established on this\nsession, if ",Object(s.b)("inlineCode",{parentName:"p"},"sub1")," has updates pending, ",Object(s.b)("inlineCode",{parentName:"p"},"sub2")," is up-to-date and ",Object(s.b)("inlineCode",{parentName:"p"},"sub3")," is\ncurrently dropping updates:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'["flush-subscriptions", "/path/to/root", {"sync_timeout": 1000}]\n')),Object(s.b)("p",null,"In response, Watchman will first emit a unilateral subscription PDU for ",Object(s.b)("inlineCode",{parentName:"p"},"sub1"),",\nthen respond with"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "clock": "c:1446410081:18462:7:135",\n  "synced": ["sub1"],\n  "no_sync_needed": ["sub2"],\n  "dropped": ["sub3"]\n}\n')),Object(s.b)("p",null,"To flush updates for some but not all subscriptions associated with this\nsession:"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'["flush-subscriptions", "/path/to/root",\n  {\n    "sync_timeout": 1000,\n    "subscriptions": ["sub1", "sub2"]\n  }\n]\n')),Object(s.b)("h3",{id:"deferred-and-dropped-updates"},"Deferred and Dropped Updates"),Object(s.b)("p",null,"Subscriptions will typically buffer individual updates until a ",Object(s.b)("em",{parentName:"p"},"settle")," period\nhas expired. ",Object(s.b)("inlineCode",{parentName:"p"},"flush-subscriptions")," will force those updates through immediately."),Object(s.b)("p",null,"Subscriptions currently deferring updates because of ",Object(s.b)("inlineCode",{parentName:"p"},"defer")," or ",Object(s.b)("inlineCode",{parentName:"p"},"defer_vcs"),"\nare updated immediately, without waiting for the ",Object(s.b)("inlineCode",{parentName:"p"},"defer")," or ",Object(s.b)("inlineCode",{parentName:"p"},"defer_vcs")," to\nend."),Object(s.b)("p",null,"Subscriptions currently dropping updates with a ",Object(s.b)("inlineCode",{parentName:"p"},"drop")," state will not get any\nupdates. Their names will be returned in the ",Object(s.b)("inlineCode",{parentName:"p"},"dropped")," field."),Object(s.b)("h3",{id:"notes"},"Notes"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"flush-subscriptions")," can only be used to flush subscriptions associated with\nthe current session."),Object(s.b)("li",{parentName:"ul"},"A single session can be subscribed to updates from multiple projects at the\nsame time. However, ",Object(s.b)("inlineCode",{parentName:"li"},"flush-subscriptions")," can only flush updates for one\nproject at a time.")))}l.isMDXComponent=!0},204:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),l=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},u=function(e){var t=l(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(a,".").concat(d)]||u[d]||b[d]||s;return n?i.a.createElement(m,o({ref:t},p,{components:n})):i.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var p=2;p<s;p++)a[p]=n[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);