(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{152:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(1),a=n(9),i=(n(0),n(204)),c={id:"since",title:"since"},o={id:"since",title:"since",description:"```bash",source:"@site/docs/since.md",permalink:"/watchman/docs/since",editUrl:"https://github.com/facebook/watchman/edit/master/website/docs/since.md",sidebar:"sidebar",previous:{title:"shutdown-server",permalink:"/watchman/docs/shutdown-server"},next:{title:"state-enter",permalink:"/watchman/docs/state-enter"}},l=[],s={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ watchman since /path/to/dir <clockspec> [patterns]\n")),Object(i.b)("p",null,"Finds all files that were modified since the specified clockspec that match\nthe optional list of patterns. If no patterns are specified, all modified\nfiles are returned."),Object(i.b)("p",null,"The response includes a ",Object(i.b)("inlineCode",{parentName:"p"},"files")," array, each element of which is an object with\nfields containing information about the file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "version": "2.7",\n  "is_fresh_instance": true,\n  "clock": "c:80616:59",\n  "files": [\n    {\n      "cclock": "c:80616:1",\n      "ctime": 1357617635,\n      "dev": 16777220,\n      "exists": true,\n      "gid": 100,\n      "ino": 20161390,\n      "mode": 33188,\n      "mtime": 1357617635,\n      "name": "argv.c",\n      "nlink": 1,\n      "oclock": "c:80616:39",\n      "size": 1340,\n      "uid": 100\n    }\n  ]\n}\n')),Object(i.b)("p",null,"The fields should be largely self-explanatory; they correspond to fields from\nthe underlying ",Object(i.b)("inlineCode",{parentName:"p"},"struct stat"),", but a couple need special mention:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"cclock"),' - The "created" clock; the clock value representing the time that\nthis file was first observed, or the clock value where this file changed\nfrom deleted to non-deleted state.'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"oclock"),' - The "observed" clock; the clock value representing the time\nthat this file was last observed to have changed.'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"exists")," - whether we believe that the file exists on disk or not. If this\nis false, most of the other fields will be omitted."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"new")," - this is only set in cases where the file results were generated as\npart of a time or clock based query, such as the ",Object(i.b)("inlineCode",{parentName:"li"},"since")," command. If the\n",Object(i.b)("inlineCode",{parentName:"li"},"cclock")," value for the file is newer than the time you specified then the\nfile entry is marked as ",Object(i.b)("inlineCode",{parentName:"li"},"new"),". This allows you to more easily determine if\nthe file was newly created without having to maintain a lot of state.")))}p.isMDXComponent=!0},204:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||b[d]||i;return n?a.a.createElement(f,o({ref:t},s,{components:n})):a.a.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var s=2;s<i;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);